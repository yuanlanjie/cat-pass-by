//void setup(){
//  size(1500,1000);
//  background(255);
  
//  strokeWeight(3);
//  rect(50,50,100,100);
  
//  rect(170,50,100,50);
//  rect(170,100,100,50);
  
//  rect(290,50,50,100);
//  rect(340,50,50,100);
  
//  rect(410,50,30,100);
//  rect(440,50,70,100);
  
//  rect(530,50,100,30);
//  rect(530,80,100,70);
  
//  rect(50,190,50,50);
//  rect(100,190,50,50);
//  rect(50,240,100,50);
  
//  rect(170,190,30,50);
//  rect(200,190,70,50);
//  rect(170,240,100,50);
  
//  rect(290,190,50,70);
//  rect(340,190,50,70);
//  rect(290,260,100,30);
  
//  rect(410,190,30,70);
//  rect(440,190,70,70);
//  rect(410,260,100,30);
  
//  rect(530,190,30,30);
//  rect(560,190,70,30);
//  rect(530,220,100,70);
  
//  rect(50,330,50,50);
//  rect(100,330,50,50);
//  rect(50,380,50,50);
//  rect(100,380,50,50);
  
//  rect(170,330,70,50);
//  rect(170,380,70,50);
//  rect(240,330,30,50);
//  rect(240,380,30,50);
  
//  rect(290,330,50,30);
//  rect(340,330,50,30);
//  rect(290,360,50,70);
//  rect(340,360,50,70);
  
//  rect(410,330,30,30);
//  rect(440,330,70,30);
//  rect(410,360,30,70);
//  rect(440,360,70,70);
  
//  rect(530,330,60,20);
//  rect(590,330,40,20);
//  rect(530,350,20,80);
//  rect(550,350,80,80);
  
//  //rect(50,470,20,20);
//  rect(70,470,80,20);
//  rect(50,490,10,80);
//  rect(60,490,10,80);
//  //rect(70,490,80,80);
  
//  rect(170,470,50,40);
//  rect(220,470,50,40);
//  rect(170,510,30,40);
//  rect(170,550,30,20);
//  //rect(200,510,70,60);
  
//  rect(290,470,30,70);
//  //rect(290,470,30,70);
//  rect(320,470,70,35);
//  //rect(320,470,70,35);
//  rect(320,505,70,35);
//  rect(290,540,100,30);
  
//  rect(410,470,50,30);
//  rect(410,500,50,70);
//  //rect(410,500,50,70);
//  rect(460,540,25,30);
//  rect(485,540,25,30);
//  rect(460,470,50,70);
  
//  rect(530,470,30,70);
//  //rect(560,470,40,70);
//  rect(600,470,30,70);
//  rect(530,540,100,30);
  
  
//  fill(255,255,0); 
//  rect(560,470,40,70);
//  rect(410,500,50,70);
//  rect(320,470,70,35);
  
//  fill(0);
//  rect(290,470,30,70);
  
//  fill(0,0,255);
//  rect(200,510,70,60);
//  rect(50,470,20,20);
  
//  fill(255,0,0);
//  rect(70,490,80,80);
  
//  fill(255,0,0);
//  rect(70,490,80,80);
//}

void setup(){
  size(900,600);
  background(255);
}

void shapeA (){
  fill(255);
  stroke(0);
  strokeWeight(3);
  rect(0,0,30,70);
  rect(70,0,30,70);
  rect(0,70,100,30);
  fill(255,255,0);
  rect(30,0,40,70);
}

void shapeB(){
  fill(255);
  stroke(0);
  strokeWeight(3);
  rect(0,0,50,30);
  rect(0,30,50,70);
  rect(50,70,25,30);
  fill(255,255,0);
  rect(50,0,50,70);
  fill(0);
  rect(75,70,25,30);
  
}

void shapeC(){
  fill(255);
  stroke(0);
  strokeWeight(3);
  rect(0,70,100,30);
  rect(30,35,70,35);
  fill(0);
  rect(0,0,30,70);
  fill(255,255,0);
  rect(30,0,70,35);
}

void shapeD(){
  fill(255);
  stroke(0);
  strokeWeight(3);
  rect(0,0,50,40);
  rect(50,0,50,40);
  rect(0,40,30,40);
  rect(0,80,30,20);
  fill(0,0,255);
  rect(30,40,70,60);
}

void shapeE(){
  fill(255);
  stroke(0);
  strokeWeight(3);
  rect(15,0,85,15);
  rect(0,15,7.5,85);
  rect(7.5,15,7.5,85);
  fill(255,0,0);
  rect(15,15,85,85);
  fill(0,0,255);
  rect(0,0,15,15);
}

//void shapeF(){
//  fill(230);
//  stroke(0);
//  strokeWeight(3);
//  rect(0,0,100,100);
//}

void draw(){
  for (int i = 0; i<9; i++){
    for (int j = 0; j<6; j++){
      pushMatrix();
      translate(i*100,j*100);
      rotate(PI/2 * floor(random(4)));
      int choice = floor (random(10));
      switch(choice){
      case 0:
        shapeA();
        break;
      case 1:
        shapeB();
        break;
      //case 3|4|5:
      //  shapeC();
      //  break;
      case 3:
        shapeC();
        break;
      case 4:
        shapeC();
        break;
      case 5:
        shapeC();
        break;
      //case 6|7|8:
      //  shapeD();
      //  break;
      case 6:
        shapeD();
        break;
      case 7:
        shapeD();
        break;
      case 8:
        shapeD();
        break;
      case 9:
        shapeE();
        break;
      }
      popMatrix();
      println(i+" / "+j+ " / "+ choice);
      frameRate(10);
    }
  }
}
